{"version":3,"file":"static/js/421.274ba0c2.chunk.js","mappings":"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","sources":["Pages/Services.js","api.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../Styles/Services.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport gsap from \"gsap\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchServices } from \"../api\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst ServiceMedia = ({ media, icon }) => {\r\n  if (!media || !media.url) {\r\n    // fallback: if you want, show icon text or placeholder\r\n    return <div style={{ width: 60, height: 60, lineHeight: \"60px\", textAlign: \"center\", fontWeight: \"bold\", color: \"#888\" }}>{icon || \"N/A\"}</div>;\r\n  }\r\n\r\n  if (media.resource_type === \"video\") {\r\n    return (\r\n      <video\r\n        src={media.url}\r\n        style={{ width: 60, height: 60, objectFit: \"contain\" }}\r\n        autoPlay\r\n        loop\r\n        muted\r\n        playsInline\r\n        preload=\"auto\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // fallback to image\r\n  return (\r\n    <img\r\n      src={media.url}\r\n      alt=\"service media\"\r\n      style={{ width: 60, height: 60, objectFit: \"contain\" }}\r\n    />\r\n  );\r\n};\r\n\r\nconst Services = () => {\r\n  const cardsRef = useRef([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getServices = async () => {\r\n      try {\r\n        const res = await fetchServices();\r\n        setServices(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching services:\", error);\r\n      }\r\n    };\r\n    getServices();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    cardsRef.current.forEach((card, i) => {\r\n      if (card) {\r\n        gsap.fromTo(\r\n          card,\r\n          { opacity: 0, y: 60 },\r\n          {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 0.7,\r\n            ease: \"power3.out\",\r\n            delay: i * 0.15,\r\n            scrollTrigger: {\r\n              trigger: card,\r\n              start: \"top 80%\",\r\n            },\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }, [services]);\r\n\r\n  return (\r\n    <section className=\"services-section\">\r\n      <motion.div\r\n        className=\"services-header\"\r\n        initial={{ opacity: 0, y: -40 }}\r\n        whileInView={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, ease: \"easeOut\" }}\r\n        viewport={{ once: true }}\r\n      >\r\n        <h4>What We Offer</h4>\r\n        <h2 className=\"gradient-text\">Our Services</h2>\r\n        <p className=\"services-subtitle\">\r\n          Rtec blends industrial expertise with smart technology to power modern manufacturing.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <div className=\"services-grid\">\r\n        {services.map((service, idx) => (\r\n          <motion.div\r\n            key={service._id}\r\n            className=\"service-card\"\r\n            ref={(el) => (cardsRef.current[idx] = el)}\r\n            whileHover={{\r\n              scale: 1.05,\r\n              rotateX: 5,\r\n              rotateY: -5,\r\n              boxShadow: \"0px 18px 28px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n            transition={{ type: \"spring\", stiffness: 170, damping: 16 }}\r\n          >\r\n            <div className=\"service-icon\">\r\n              <ServiceMedia media={service.media} icon={service.icon} />\r\n            </div>\r\n            <h3 className=\"service-title\">{service.title}</h3>\r\n            <p className=\"service-desc\">{service.description}</p>\r\n            <Link to={`/services/${service.slug}`} className=\"learn-more-btn\">\r\n              <button className=\"learn-more-button\">Learn more →</button>\r\n            </Link>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","// src/api.js\r\nimport axios from \"axios\";\r\n\r\n// Prefer environment override, otherwise use relative \"/api\" so it works with\r\n// CRA dev proxy and same-origin production deployments.\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\r\n});\r\n\r\n////////////////////////\r\n// 🛠️ Products API\r\n////////////////////////\r\nexport const fetchProducts = () => API.get(\"/products\");\r\nexport const fetchProductById = (id) => API.get(`/products/${id}`);\r\nexport const createProduct = (data) => API.post(\"/products\", data);\r\nexport const updateProduct = (id, data) => API.put(`/products/${id}`, data);\r\nexport const deleteProduct = (id) => API.delete(`/products/${id}`);\r\n\r\n////////////////////////\r\n// ⚙️ Services API\r\n////////////////////////\r\nexport const fetchServices = () => API.get(\"/services\");\r\nexport const fetchServiceById = (id) => API.get(`/services/${id}`);\r\nexport const fetchServiceBySlug = (slug) => API.get(`/services/slug/${slug}`);\r\nexport const createService = (data) => API.post(\"/services\", data);\r\nexport const updateService = (id, data) => API.put(`/services/${id}`, data);\r\nexport const deleteService = (id) => API.delete(`/services/${id}`);\r\n\r\n////////////////////////\r\n// 📄 About API\r\n////////////////////////\r\nexport const fetchAbout = () => API.get(`/about`);\r\nexport const createAbout = (data) => API.post(`/about`, data);\r\nexport const updateAbout = (id, data) => API.put(`/about/${id}`, data);\r\nexport const deleteAbout = (id) => API.delete(`/about/${id}`);\r\n\r\n////////////////////////\r\n// 🤖 Chatbot API\r\n////////////////////////\r\nexport const askChatbot = (query) => API.post(`/chatbot`, { query });\r\n\r\nexport default API;\r\n"],"names":["gsap","registerPlugin","ScrollTrigger","ServiceMedia","_ref","media","icon","url","resource_type","_jsx","src","style","width","height","objectFit","autoPlay","loop","muted","playsInline","preload","alt","lineHeight","textAlign","fontWeight","color","children","Services","cardsRef","useRef","services","setServices","useState","useEffect","async","res","fetchServices","data","error","console","getServices","current","forEach","card","i","fromTo","opacity","y","duration","ease","delay","scrollTrigger","trigger","start","_jsxs","className","motion","div","initial","whileInView","transition","viewport","once","map","service","idx","ref","el","whileHover","scale","rotateX","rotateY","boxShadow","type","stiffness","damping","title","description","Link","to","slug","_id","API","axios","create","baseURL","process","REACT_APP_API_URL","fetchProducts","get","askChatbot","query","post"],"sourceRoot":""}